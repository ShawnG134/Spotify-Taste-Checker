{"ast":null,"code":"var _jsxFileName = \"/Users/seangong/WebstormProjects/Spotify/client/src/TracksComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport OpenAI from 'openai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TracksComponent() {\n  _s();\n  const [userTracks, setUserTracks] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const openai = new OpenAI({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n    dangerouslyAllowBrowser: true\n  });\n\n  // Fetch user IDs from the backend\n  const fetchUserIds = async () => {\n    try {\n      const url = 'http://localhost:3001/user-ids';\n      const response = await axios.get(url);\n      if (!response.data.length) throw new Error(\"No user logged in, please log in.\");\n      if (response.data.length === 1) throw new Error(\"Only one user found.\");\n      return response.data;\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n      return []; // Prevent further processing on error\n    }\n  };\n\n  // Fetch tracks for a specific user\n  const fetchTracks = async userId => {\n    try {\n      const url = `http://localhost:3001/get-tracks/${userId}`;\n      const response = await axios.get(url);\n      return {\n        userId,\n        tracks: response.data.map(track => ({\n          name: track.name,\n          artist: track.artist\n        }))\n      };\n    } catch (err) {\n      setError(`Failed to fetch tracks for user ${userId}`);\n      return null;\n    }\n  };\n\n  // Analyze musical tastes using ChatGPT\n  const analyzeTastes = async tracksData => {\n    try {\n      // const completion = await openai.chat.completions.create({\n      //     messages: [\n      //         { role: \"system\", content: \"Compare the musical tastes of these two users.\" },\n      //         { role: \"user\", content: JSON.stringify(tracksData) }\n      //     ],\n      //     model: \"gpt-3.5-turbo\",\n      // });\n      return completion.choices[0].message.content;\n      return \"This is a test\";\n    } catch (err) {\n      setError(\"Error analyzing music tastes with ChatGPT.\");\n      console.log(err);\n      return \"Error during analysis.\";\n    }\n  };\n  useEffect(() => {\n    setLoading(true);\n    fetchUserIds().then(userIds => {\n      Promise.all(userIds.map(userId => fetchTracks(userId))).then(async results => {\n        const validResults = results.filter(result => result);\n        if (validResults.length > 1) {\n          analyzeTastes(validResults).then(analysis => {\n            setUserTracks({\n              analysis,\n              users: validResults\n            });\n            setLoading(false);\n          });\n        } else {\n          // to wait until ChatGPT give response\n          await new Promise(r => setTimeout(r, 1000));\n          window.location.href = \"http://localhost:3000\";\n        }\n      });\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Music Taste Comparison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: userTracks.analysis || 'No comparison available.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(TracksComponent, \"P7KgMvUFbysUx/fIw5IuAhKNP7k=\");\n_c = TracksComponent;\nexport default TracksComponent;\nvar _c;\n$RefreshReg$(_c, \"TracksComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","OpenAI","jsxDEV","_jsxDEV","TracksComponent","_s","userTracks","setUserTracks","loading","setLoading","error","setError","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","dangerouslyAllowBrowser","fetchUserIds","url","response","get","data","length","Error","err","message","fetchTracks","userId","tracks","map","track","name","artist","analyzeTastes","tracksData","completion","choices","content","console","log","then","userIds","Promise","all","results","validResults","filter","result","analysis","users","r","setTimeout","window","location","href","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seangong/WebstormProjects/Spotify/client/src/TracksComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport OpenAI from 'openai';\n\nfunction TracksComponent() {\n    const [userTracks, setUserTracks] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const openai = new OpenAI({ apiKey: process.env.REACT_APP_OPENAI_API_KEY, dangerouslyAllowBrowser: true });\n\n    // Fetch user IDs from the backend\n    const fetchUserIds = async () => {\n        try {\n            const url = 'http://localhost:3001/user-ids';\n            const response = await axios.get(url);\n            if (!response.data.length) throw new Error(\"No user logged in, please log in.\");\n            if (response.data.length === 1) throw new Error(\"Only one user found.\");\n            return response.data;\n        } catch (err) {\n            setError(err.message);\n            setLoading(false);\n            return [];  // Prevent further processing on error\n        }\n    };\n\n    // Fetch tracks for a specific user\n    const fetchTracks = async (userId) => {\n        try {\n            const url = `http://localhost:3001/get-tracks/${userId}`;\n            const response = await axios.get(url);\n            return {\n                userId,\n                tracks: response.data.map(track => ({\n                    name: track.name,\n                    artist: track.artist\n                }))\n            };\n        } catch (err) {\n            setError(`Failed to fetch tracks for user ${userId}`);\n            return null;\n        }\n    };\n\n    // Analyze musical tastes using ChatGPT\n    const analyzeTastes = async (tracksData) => {\n        try {\n            // const completion = await openai.chat.completions.create({\n            //     messages: [\n            //         { role: \"system\", content: \"Compare the musical tastes of these two users.\" },\n            //         { role: \"user\", content: JSON.stringify(tracksData) }\n            //     ],\n            //     model: \"gpt-3.5-turbo\",\n            // });\n            return completion.choices[0].message.content;\n            return \"This is a test\";\n        } catch (err) {\n            setError(\"Error analyzing music tastes with ChatGPT.\");\n            console.log(err);\n            return \"Error during analysis.\";\n        }\n    };\n\n    useEffect(() => {\n        setLoading(true);\n        fetchUserIds().then(userIds => {\n            Promise.all(userIds.map(userId => fetchTracks(userId)))\n                .then(async results => {\n                    const validResults = results.filter(result => result);\n                    if (validResults.length > 1) {\n                        analyzeTastes(validResults).then(analysis => {\n                            setUserTracks({analysis, users: validResults});\n                            setLoading(false);\n                        });\n                    } else {\n                        // to wait until ChatGPT give response\n                        await new Promise(r => setTimeout(r, 1000));\n                        window.location.href = \"http://localhost:3000\";\n                    }\n                });\n        });\n    }, []);\n\n    if (loading) return <div>Loading...</div>;\n    if (error) return <div>Error: {error}</div>;\n\n    return (\n        <div>\n            <h1>Music Taste Comparison</h1>\n            <p>{userTracks.analysis || 'No comparison available.'}</p>\n        </div>\n    );\n}\n\nexport default TracksComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}