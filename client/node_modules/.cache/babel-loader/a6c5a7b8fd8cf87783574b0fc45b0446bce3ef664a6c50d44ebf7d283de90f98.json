{"ast":null,"code":"var _jsxFileName = \"/Users/seangong/WebstormProjects/Spotify/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport LoginButton from './LoginButton';\nimport TracksComponent from \"./TracksComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user1Data, setUser1Data] = useState({\n    accessToken: null,\n    userId: null\n  });\n  const [user2Data, setUser2Data] = useState({\n    accessToken: null,\n    userId: null\n  });\n  const [userIds, setUserIds] = useState([]);\n  useEffect(() => {\n    const code = new URLSearchParams(window.location.search).get('code');\n    if (code) {\n      axios.post('http://localhost:3001/callback', {\n        code\n      }).then(res => {\n        const newData = {\n          accessToken: res.data.accessToken,\n          userId: res.data.userId\n        };\n        if (!user1Data.accessToken) {\n          setUser1Data(newData);\n          fetchAndStoreTracks(newData);\n        } else {\n          setUser2Data(newData);\n        }\n      }).catch(err => console.error('Error in token exchange:', err));\n    }\n    fetchUserIds();\n  }, [user1Data.accessToken]); // Dependency to re-run the effect if accessToken changes\n\n  const fetchUserIds = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/user-ids');\n      setUserIds(response.data); // Update state with fetched user IDs.\n    } catch (err) {\n      console.error('Error fetching user IDs:', err);\n    }\n  };\n  const fetchAndStoreTracks = async ({\n    accessToken,\n    userId\n  }) => {\n    if (!accessToken || !userId) return;\n    try {\n      const {\n        data\n      } = await axios.get('https://api.spotify.com/v1/me/top/tracks?limit=50', {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      const tracksToStore = data.items.map(track => ({\n        name: track.name,\n        artists: track.artists.map(artist => artist.name) // Collect all artist names\n      }));\n      console.log(tracksToStore);\n      await axios.post('http://localhost:3001/store-tracks', {\n        tracks: tracksToStore,\n        userId\n      });\n    } catch (err) {\n      console.error('Error fetching and sending tracks:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!user1Data.accessToken ? /*#__PURE__*/_jsxDEV(LoginButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(TracksComponent, {\n      userData: user1Data,\n      otherUserData: user2Data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), user1Data.accessToken && !user2Data.accessToken ? /*#__PURE__*/_jsxDEV(LoginButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 64\n    }, this) : /*#__PURE__*/_jsxDEV(TracksComponent, {\n      userData: user1Data,\n      otherUserData: user2Data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TracksComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ZZn8KQ7SCga9H3udeT6d9NDc3jY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","LoginButton","TracksComponent","jsxDEV","_jsxDEV","App","_s","user1Data","setUser1Data","accessToken","userId","user2Data","setUser2Data","userIds","setUserIds","code","URLSearchParams","window","location","search","get","post","then","res","newData","data","fetchAndStoreTracks","catch","err","console","error","fetchUserIds","response","headers","Authorization","tracksToStore","items","map","track","name","artists","artist","log","tracks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","userData","otherUserData","_c","$RefreshReg$"],"sources":["/Users/seangong/WebstormProjects/Spotify/client/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport LoginButton from './LoginButton';\nimport TracksComponent from \"./TracksComponent\";\n\nfunction App() {\n    const [user1Data, setUser1Data] = useState({accessToken: null, userId: null});\n    const [user2Data, setUser2Data] = useState({accessToken: null, userId: null});\n    const [userIds, setUserIds] = useState([]);\n    useEffect(() => {\n        const code = new URLSearchParams(window.location.search).get('code');\n        if (code) {\n            axios.post('http://localhost:3001/callback', {code})\n                .then(res => {\n                    const newData = {accessToken: res.data.accessToken, userId: res.data.userId};\n                    if (!user1Data.accessToken) {\n                        setUser1Data(newData);\n                        fetchAndStoreTracks(newData);\n                    } else {\n                        setUser2Data(newData);\n                    }\n                })\n                .catch(err => console.error('Error in token exchange:', err));\n        }\n        fetchUserIds()\n    }, [user1Data.accessToken]); // Dependency to re-run the effect if accessToken changes\n\n    const fetchUserIds = async () => {\n        try {\n            const response = await axios.get('http://localhost:3001/user-ids');\n            setUserIds(response.data); // Update state with fetched user IDs.\n        } catch (err) {\n            console.error('Error fetching user IDs:', err);\n        }\n    }\n    const fetchAndStoreTracks = async ({accessToken, userId}) => {\n        if (!accessToken || !userId) return;\n        try {\n            const {data} = await axios.get('https://api.spotify.com/v1/me/top/tracks?limit=50', {\n                headers: {Authorization: `Bearer ${accessToken}`}\n            });\n            const tracksToStore = data.items.map(track => ({\n                name: track.name,\n                artists: track.artists.map(artist => artist.name) // Collect all artist names\n            }));\n            console.log(tracksToStore);\n            await axios.post('http://localhost:3001/store-tracks', {tracks: tracksToStore, userId});\n        } catch (err) {\n            console.error('Error fetching and sending tracks:', err);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            {!user1Data.accessToken ? <LoginButton/> :\n                <TracksComponent userData={user1Data} otherUserData={user2Data}/>\n            }\n            {user1Data.accessToken && !user2Data.accessToken ? <LoginButton/> :\n                <TracksComponent userData={user1Data} otherUserData={user2Data}/>\n            }\n\n            <TracksComponent></TracksComponent>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}