{"ast":null,"code":"var _jsxFileName = \"/Users/seangong/WebstormProjects/Spotify/client/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport LoginButton from './LoginButton';\nimport TopTracks from './TopTracks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [authenticated, setAuthenticated] = useState(false);\n  useEffect(() => {\n    // Check URL for an authentication token or some condition indicating successful authentication\n    // This is a simplified example. In a real app, you'd handle this more securely\n    const searchParams = new URLSearchParams(window.location.search);\n    if (searchParams.has('authenticated')) {\n      setAuthenticated(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: !authenticated ? /*#__PURE__*/_jsxDEV(LoginButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(TopTracks, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"+nyo0O1WmcKNkwQZH3xRKUoDvQ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LoginButton","TopTracks","jsxDEV","_jsxDEV","App","_s","authenticated","setAuthenticated","searchParams","URLSearchParams","window","location","search","has","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seangong/WebstormProjects/Spotify/client/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport LoginButton from './LoginButton';\nimport TopTracks from './TopTracks';\n\nfunction App() {\n    const [authenticated, setAuthenticated] = useState(false);\n\n    useEffect(() => {\n        // Check URL for an authentication token or some condition indicating successful authentication\n        // This is a simplified example. In a real app, you'd handle this more securely\n        const searchParams = new URLSearchParams(window.location.search);\n        if (searchParams.has('authenticated')) {\n            setAuthenticated(true);\n        }\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                {!authenticated ? (\n                    <LoginButton />\n                ) : (\n                    <TopTracks />\n                )}\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACZ;IACA;IACA,MAAMS,YAAY,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAChE,IAAIJ,YAAY,CAACK,GAAG,CAAC,eAAe,CAAC,EAAE;MACnCN,gBAAgB,CAAC,IAAI,CAAC;IAC1B;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIJ,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChBZ,OAAA;MAAQW,SAAS,EAAC,YAAY;MAAAC,QAAA,EACzB,CAACT,aAAa,gBACXH,OAAA,CAACH,WAAW;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEfhB,OAAA,CAACF,SAAS;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACf;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACd,EAAA,CAvBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}