{"ast":null,"code":"var _jsxFileName = \"/Users/seangong/WebstormProjects/Spotify/client/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport TopTrack from \"./TopTrack\"; // Make sure you've installed axios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // State to hold the authorization tokens\n  const [tokens, setTokens] = useState(null);\n  useEffect(() => {\n    // Extract the code from URL parameters\n    const code = new URLSearchParams(window.location.search).get('code');\n    if (code) {\n      exchangeCodeForToken(code);\n    }\n  }, []);\n  const exchangeCodeForToken = code => {\n    axios.post('http://localhost:3001/api/spotify/login', {\n      code\n    }).then(response => {\n      setTokens(response.data); // Save the tokens in state\n      // Optionally, redirect or change the component view here\n    }).catch(error => console.error('Error exchanging code for token:', error));\n  };\n\n  // Render the component with a login button or show user's top track if tokens are available\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !tokens ? /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://accounts.spotify.com/authorize?client_id=8b945ef10ea24755b83ac50cede405a0&response_type=code&redirect_uri=http://localhost:3000&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state\",\n      children: \"Login With Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(TopTrack, {\n      tokens: tokens\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) // Pass tokens to the TopTrack component\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"VTg6ifHKJppMN8jRpIb1lIs7Ce4=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","axios","TopTrack","jsxDEV","_jsxDEV","Login","_s","tokens","setTokens","code","URLSearchParams","window","location","search","get","exchangeCodeForToken","post","then","response","data","catch","error","console","children","href","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seangong/WebstormProjects/Spotify/client/src/Login.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport TopTrack from \"./TopTrack\"; // Make sure you've installed axios\n\nconst Login = () => {\n    // State to hold the authorization tokens\n    const [tokens, setTokens] = useState(null);\n\n    useEffect(() => {\n        // Extract the code from URL parameters\n        const code = new URLSearchParams(window.location.search).get('code');\n        if (code) {\n            exchangeCodeForToken(code);\n        }\n    }, []);\n\n    const exchangeCodeForToken = (code) => {\n        axios.post('http://localhost:3001/api/spotify/login', { code })\n            .then(response => {\n                setTokens(response.data); // Save the tokens in state\n                // Optionally, redirect or change the component view here\n            })\n            .catch(error => console.error('Error exchanging code for token:', error));\n    };\n\n    // Render the component with a login button or show user's top track if tokens are available\n    return (\n        <div>\n            {!tokens ? (\n                <a href=\"https://accounts.spotify.com/authorize?client_id=8b945ef10ea24755b83ac50cede405a0&response_type=code&redirect_uri=http://localhost:3000&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state\">Login With Spotify</a>\n            ) : (\n                <TopTrack tokens={tokens} /> // Pass tokens to the TopTrack component\n            )}\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMU,IAAI,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAACC,GAAG,CAAC,MAAM,CAAC;IACpE,IAAIL,IAAI,EAAE;MACNM,oBAAoB,CAACN,IAAI,CAAC;IAC9B;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,oBAAoB,GAAIN,IAAI,IAAK;IACnCR,KAAK,CAACe,IAAI,CAAC,yCAAyC,EAAE;MAAEP;IAAK,CAAC,CAAC,CAC1DQ,IAAI,CAACC,QAAQ,IAAI;MACdV,SAAS,CAACU,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;MAC1B;IACJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC,CAAC;EACjF,CAAC;;EAED;EACA,oBACIjB,OAAA;IAAAmB,QAAA,EACK,CAAChB,MAAM,gBACJH,OAAA;MAAGoB,IAAI,EAAC,iSAAiS;MAAAD,QAAA,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEhUxB,OAAA,CAACF,QAAQ;MAACK,MAAM,EAAEA;IAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;EAChC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACtB,EAAA,CA/BID,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAiCX,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}