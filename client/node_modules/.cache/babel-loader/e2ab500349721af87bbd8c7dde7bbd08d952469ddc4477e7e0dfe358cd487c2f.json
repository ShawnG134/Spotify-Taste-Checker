{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst TopTracks = ({\n  accessToken,\n  userId\n}) => {\n  _s();\n  const [tracks, setTracks] = useState([]);\n  useEffect(() => {\n    const fetchTopTracks = async () => {\n      try {\n        const {\n          data\n        } = await axios.get('https://api.spotify.com/v1/me/top/tracks?limit=50', {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        setTracks(data.items);\n        const simplifiedData = data.items.map(track => ({\n          name: track.name,\n          artists: track.artists.map(artist => artist.name) // Collect all artist names\n        }));\n        console.log(simplifiedData);\n        await storeTracksInRedis(simplifiedData);\n      } catch (err) {\n        console.error('Error fetching top tracks:', err);\n      }\n    };\n    const storeTracksInRedis = async tracks => {\n      try {\n        await axios.post('http://localhost:3001/store-tracks', {\n          tracks,\n          userId\n        });\n      } catch (err) {\n        console.error('Error sending tracks to Redis:', err);\n      }\n    };\n    if (accessToken && userId) {\n      fetchTopTracks();\n    }\n  }, [accessToken, userId]); // Dependency array includes userId\n\n  return [];\n};\n_s(TopTracks, \"f0kRKS0z35esRkLUBB+Oc19rjkA=\");\n_c = TopTracks;\nexport default TopTracks;\nvar _c;\n$RefreshReg$(_c, \"TopTracks\");","map":{"version":3,"names":["React","useState","useEffect","axios","TopTracks","accessToken","userId","_s","tracks","setTracks","fetchTopTracks","data","get","headers","Authorization","items","simplifiedData","map","track","name","artists","artist","console","log","storeTracksInRedis","err","error","post","_c","$RefreshReg$"],"sources":["/Users/seangong/WebstormProjects/Spotify/client/src/TopTracks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst TopTracks = ({ accessToken, userId }) => {\n    const [tracks, setTracks] = useState([]);\n\n    useEffect(() => {\n        const fetchTopTracks = async () => {\n            try {\n                const { data } = await axios.get('https://api.spotify.com/v1/me/top/tracks?limit=50', {\n                    headers: {\n                        Authorization: `Bearer ${accessToken}`,\n                    },\n                });\n                setTracks(data.items);\n                const simplifiedData = data.items.map(track => ({\n                    name: track.name,\n                    artists: track.artists.map(artist => artist.name) // Collect all artist names\n                }));\n                console.log(simplifiedData);\n                await storeTracksInRedis(simplifiedData);\n            } catch (err) {\n                console.error('Error fetching top tracks:', err);\n            }\n        };\n\n        const storeTracksInRedis = async (tracks) => {\n            try {\n                await axios.post('http://localhost:3001/store-tracks', {\n                    tracks,\n                    userId\n                });\n            } catch (err) {\n                console.error('Error sending tracks to Redis:', err);\n            }\n        };\n\n        if (accessToken && userId) {\n            fetchTopTracks();\n        }\n    }, [accessToken, userId]); // Dependency array includes userId\n\n    return (\n        []\n    );\n};\n\nexport default TopTracks;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,mDAAmD,EAAE;UAClFC,OAAO,EAAE;YACLC,aAAa,EAAG,UAAST,WAAY;UACzC;QACJ,CAAC,CAAC;QACFI,SAAS,CAACE,IAAI,CAACI,KAAK,CAAC;QACrB,MAAMC,cAAc,GAAGL,IAAI,CAACI,KAAK,CAACE,GAAG,CAACC,KAAK,KAAK;UAC5CC,IAAI,EAAED,KAAK,CAACC,IAAI;UAChBC,OAAO,EAAEF,KAAK,CAACE,OAAO,CAACH,GAAG,CAACI,MAAM,IAAIA,MAAM,CAACF,IAAI,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QACHG,OAAO,CAACC,GAAG,CAACP,cAAc,CAAC;QAC3B,MAAMQ,kBAAkB,CAACR,cAAc,CAAC;MAC5C,CAAC,CAAC,OAAOS,GAAG,EAAE;QACVH,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAED,GAAG,CAAC;MACpD;IACJ,CAAC;IAED,MAAMD,kBAAkB,GAAG,MAAOhB,MAAM,IAAK;MACzC,IAAI;QACA,MAAML,KAAK,CAACwB,IAAI,CAAC,oCAAoC,EAAE;UACnDnB,MAAM;UACNF;QACJ,CAAC,CAAC;MACN,CAAC,CAAC,OAAOmB,GAAG,EAAE;QACVH,OAAO,CAACI,KAAK,CAAC,gCAAgC,EAAED,GAAG,CAAC;MACxD;IACJ,CAAC;IAED,IAAIpB,WAAW,IAAIC,MAAM,EAAE;MACvBI,cAAc,CAAC,CAAC;IACpB;EACJ,CAAC,EAAE,CAACL,WAAW,EAAEC,MAAM,CAAC,CAAC,CAAC,CAAC;;EAE3B,OACI,EAAE;AAEV,CAAC;AAACC,EAAA,CA1CIH,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}