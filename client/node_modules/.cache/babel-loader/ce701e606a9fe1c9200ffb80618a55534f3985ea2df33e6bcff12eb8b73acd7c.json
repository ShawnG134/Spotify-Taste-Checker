{"ast":null,"code":"var _jsxFileName = \"/Users/seangong/WebstormProjects/Spotify/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport LoginButton from './LoginButton';\nimport TracksComponent from \"./TracksComponent\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userdata, setUserdata] = useState({\n    accessToken: null,\n    userId: null\n  });\n  const [userIds, setUserIds] = useState([]);\n  const [redirectInitiated, setRedirectInitiated] = useState(false);\n  useEffect(() => {\n    const code = new URLSearchParams(window.location.search).get('code');\n    if (code && !redirectInitiated) {\n      axios.post('http://localhost:3001/callback', {\n        code\n      }).then(async res => {\n        const newData = {\n          accessToken: res.data.accessToken,\n          userId: res.data.userId\n        };\n        if (!userdata.accessToken) {\n          setUserdata(newData);\n          fetchAndStoreTracks(newData);\n          // Set the flag before redirection\n          setRedirectInitiated(true);\n          // this is to wait for the results to be fetch before redirecting to main page.\n          await new Promise(r => setTimeout(r, 2000));\n          window.location.href = \"http://localhost:3000\";\n        }\n      }).catch(err => console.error('Error in token exchange:', err));\n    }\n    fetchUserIds();\n  }, [userdata.accessToken]); // Dependency to re-run the effect if accessToken changes\n\n  const fetchUserIds = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/user-ids');\n      setUserIds(response.data); // Update state with fetched user IDs.\n    } catch (err) {\n      console.error('Error fetching user IDs:', err);\n    }\n  };\n  const fetchAndStoreTracks = async ({\n    accessToken,\n    userId\n  }) => {\n    if (!accessToken || !userId) return;\n    try {\n      const {\n        data\n      } = await axios.get('https://api.spotify.com/v1/me/top/tracks?limit=50', {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      const tracksToStore = data.items.map(track => ({\n        name: track.name,\n        artists: track.artists.map(artist => artist.name) // Collect all artist names\n      }));\n      console.log(tracksToStore);\n      await axios.post('http://localhost:3001/store-tracks', {\n        tracks: tracksToStore,\n        userId\n      });\n    } catch (err) {\n      console.error('Error fetching and sending tracks:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Spotify Taste Checker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Compare your music taste with friends!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), userIds.length === 2 ? /*#__PURE__*/_jsxDEV(TracksComponent, {\n        userData: userIds[0],\n        otherUserData: userIds[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(LoginButton, {\n        length: userIds.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"UAiMwGzBEe0yyNo/ZRbIqwMPIBc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","LoginButton","TracksComponent","jsxDEV","_jsxDEV","App","_s","userdata","setUserdata","accessToken","userId","userIds","setUserIds","redirectInitiated","setRedirectInitiated","code","URLSearchParams","window","location","search","get","post","then","res","newData","data","fetchAndStoreTracks","Promise","r","setTimeout","href","catch","err","console","error","fetchUserIds","response","headers","Authorization","tracksToStore","items","map","track","name","artists","artist","log","tracks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","userData","otherUserData","_c","$RefreshReg$"],"sources":["/Users/seangong/WebstormProjects/Spotify/client/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport LoginButton from './LoginButton';\nimport TracksComponent from \"./TracksComponent\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\n\nfunction App() {\n    const [userdata, setUserdata] = useState({accessToken: null, userId: null});\n    const [userIds, setUserIds] = useState([]);\n    const [redirectInitiated, setRedirectInitiated] = useState(false);\n\n    useEffect(() => {\n        const code = new URLSearchParams(window.location.search).get('code');\n        if (code && !redirectInitiated) {\n            axios.post('http://localhost:3001/callback', { code })\n                .then(async res => {\n                    const newData = {accessToken: res.data.accessToken, userId: res.data.userId};\n                    if (!userdata.accessToken) {\n                        setUserdata(newData);\n                        fetchAndStoreTracks(newData);\n                        // Set the flag before redirection\n                        setRedirectInitiated(true);\n                        // this is to wait for the results to be fetch before redirecting to main page.\n                        await new Promise(r => setTimeout(r, 2000));\n                        window.location.href = \"http://localhost:3000\";\n                    }\n                })\n                .catch(err => console.error('Error in token exchange:', err));\n        }\n        fetchUserIds()\n    }, [userdata.accessToken]);// Dependency to re-run the effect if accessToken changes\n\n    const fetchUserIds = async () => {\n        try {\n            const response = await axios.get('http://localhost:3001/user-ids');\n            setUserIds(response.data); // Update state with fetched user IDs.\n        } catch (err) {\n            console.error('Error fetching user IDs:', err);\n        }\n    }\n    const fetchAndStoreTracks = async ({accessToken, userId}) => {\n        if (!accessToken || !userId) return;\n        try {\n            const {data} = await axios.get('https://api.spotify.com/v1/me/top/tracks?limit=50', {\n                headers: {Authorization: `Bearer ${accessToken}`}\n            });\n            const tracksToStore = data.items.map(track => ({\n                name: track.name,\n                artists: track.artists.map(artist => artist.name) // Collect all artist names\n            }));\n            console.log(tracksToStore);\n            await axios.post('http://localhost:3001/store-tracks', {tracks: tracksToStore, userId});\n        } catch (err) {\n            console.error('Error fetching and sending tracks:', err);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <div className=\"content\">\n                <h1>Spotify Taste Checker</h1>\n                <p>Compare your music taste with friends!</p>\n                {userIds.length === 2 ? (\n                    <TracksComponent userData={userIds[0]} otherUserData={userIds[1]}/>\n                ) : (\n                    <LoginButton length={userIds.length}/>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}