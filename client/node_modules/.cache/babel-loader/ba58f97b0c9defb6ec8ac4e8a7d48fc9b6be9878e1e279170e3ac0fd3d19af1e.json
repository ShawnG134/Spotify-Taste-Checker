{"ast":null,"code":"var _jsxFileName = \"/Users/seangong/WebstormProjects/Spotify/client/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport LoginButton from './LoginButton';\nimport TopTracks from './TopTracks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    // Simulate checking if the user is authenticated\n    const searchParams = new URLSearchParams(window.location.search);\n    if (searchParams.has('code')) {\n      // A more robust implementation would involve sending this code back to your server\n      // to exchange it for an access token and securely storing that token.\n      // Here we'll just simulate authentication for simplicity.\n      setIsAuthenticated(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !isAuthenticated ? /*#__PURE__*/_jsxDEV(LoginButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(TopTracks, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LoginButton","TopTracks","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","searchParams","URLSearchParams","window","location","search","has","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seangong/WebstormProjects/Spotify/client/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport LoginButton from './LoginButton';\nimport TopTracks from './TopTracks';\n\nfunction App() {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    useEffect(() => {\n        // Simulate checking if the user is authenticated\n        const searchParams = new URLSearchParams(window.location.search);\n        if (searchParams.has('code')) {\n            // A more robust implementation would involve sending this code back to your server\n            // to exchange it for an access token and securely storing that token.\n            // Here we'll just simulate authentication for simplicity.\n            setIsAuthenticated(true);\n        }\n    }, []);\n\n    return (\n        <div className=\"App\">\n            {!isAuthenticated ? (\n                <LoginButton />\n            ) : (\n                <TopTracks />\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMS,YAAY,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAChE,IAAIJ,YAAY,CAACK,GAAG,CAAC,MAAM,CAAC,EAAE;MAC1B;MACA;MACA;MACAN,kBAAkB,CAAC,IAAI,CAAC;IAC5B;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIJ,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,EACf,CAACT,eAAe,gBACbH,OAAA,CAACH,WAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEfhB,OAAA,CAACF,SAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACf;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACd,EAAA,CAvBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}